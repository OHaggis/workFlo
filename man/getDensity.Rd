% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getDensity.R
\name{getDensity}
\alias{getDensity}
\title{Gets the density of a point within a raster (plot area)}
\usage{
getDensity(x, y, ...)
}
\arguments{
\item{x}{x values of all data points}

\item{y}{y values of all data points}

\item{n}{specifies how many intersections the grid for calculation of the density should have. Defaults to n = 50 (50 x 50 raster).}
}
\value{
a column of numerical density values
}
\description{
This function gets the density of values within an n x n raster of the whole data span.
Function was taken from: https://slowkow.com/notes/ggplot2-color-by-density/
}
\examples{
library(ggplot2)
library(dplyr)

## take the mpg tibble and calculate the point density of a scatter plot of cty (miles per gallon innercity) and hwy (miles per gallon highway)
mpg \%>\%
  mutate(point_density = getDensity(cty, hwy)) \%>\%
  ggplot(aes(x = cty,
             y = hwy)) +
  geom_point(aes(col = point_density),
             size = 4) +
  scale_color_viridis_c() +
  theme_classic()

## demonstration of different raster sizes ---
set.seed(42)
tb <- tibble(x = rnorm(1000),
             y = rnorm(1000))

# rasterise over 10 x 10 raster intervalls
tb \%>\%
  mutate(point_density = getDensity(x, y, n = 10)) \%>\%
  ggplot(aes(x = x,
             y = y)) +
  geom_point(aes(col = point_density),
             size = 2) +
  scale_colour_viridis_c() +
  theme_classic()

# rasterise over 100 x 100 raster intervalls
tb \%>\%
  mutate(point_density = getDensity(x, y, n = 100)) \%>\%
  ggplot(aes(x = x,
             y = y)) +
  geom_point(aes(col = point_density),
             size = 2) +
  scale_colour_viridis_c() +
  theme_classic()
}
